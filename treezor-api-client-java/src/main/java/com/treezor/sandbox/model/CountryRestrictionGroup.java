/*
 * Treezor
 * Treezor API.  more info [here](https://www.treezor.com). 
 *
 * OpenAPI spec version: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.treezor.sandbox.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CountryRestrictionGroup
 */

public class CountryRestrictionGroup {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("isWhitelist")
  private Boolean isWhitelist = null;

  @SerializedName("countries")
  private List<String> countries = null;

  /**
   * status of the country group
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    PENDING("PENDING"),
    
    CANCELED("CANCELED"),
    
    VALIDATED("VALIDATED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("startDate")
  private String startDate = null;

  @SerializedName("createdDate")
  private String createdDate = null;

  public CountryRestrictionGroup id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Country Group&#39;s id
   * @return id
  **/
  @ApiModelProperty(value = "Country Group's id")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public CountryRestrictionGroup name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Country Group&#39;s name
   * @return name
  **/
  @ApiModelProperty(value = "Country Group's name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CountryRestrictionGroup isWhitelist(Boolean isWhitelist) {
    this.isWhitelist = isWhitelist;
    return this;
  }

   /**
   * determines whether it will be a black or a white list
   * @return isWhitelist
  **/
  @ApiModelProperty(value = "determines whether it will be a black or a white list")
  public Boolean isIsWhitelist() {
    return isWhitelist;
  }

  public void setIsWhitelist(Boolean isWhitelist) {
    this.isWhitelist = isWhitelist;
  }

  public CountryRestrictionGroup countries(List<String> countries) {
    this.countries = countries;
    return this;
  }

  public CountryRestrictionGroup addCountriesItem(String countriesItem) {
    if (this.countries == null) {
      this.countries = new ArrayList<String>();
    }
    this.countries.add(countriesItem);
    return this;
  }

   /**
   * Array of countries
   * @return countries
  **/
  @ApiModelProperty(value = "Array of countries")
  public List<String> getCountries() {
    return countries;
  }

  public void setCountries(List<String> countries) {
    this.countries = countries;
  }

  public CountryRestrictionGroup status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * status of the country group
   * @return status
  **/
  @ApiModelProperty(value = "status of the country group")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public CountryRestrictionGroup startDate(String startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Date YYYY-MM-DD HH:MM:SS
   * @return startDate
  **/
  @ApiModelProperty(value = "Date YYYY-MM-DD HH:MM:SS")
  public String getStartDate() {
    return startDate;
  }

  public void setStartDate(String startDate) {
    this.startDate = startDate;
  }

  public CountryRestrictionGroup createdDate(String createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Date YYYY-MM-DD HH:MM:SS
   * @return createdDate
  **/
  @ApiModelProperty(value = "Date YYYY-MM-DD HH:MM:SS")
  public String getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(String createdDate) {
    this.createdDate = createdDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CountryRestrictionGroup countryRestrictionGroup = (CountryRestrictionGroup) o;
    return Objects.equals(this.id, countryRestrictionGroup.id) &&
        Objects.equals(this.name, countryRestrictionGroup.name) &&
        Objects.equals(this.isWhitelist, countryRestrictionGroup.isWhitelist) &&
        Objects.equals(this.countries, countryRestrictionGroup.countries) &&
        Objects.equals(this.status, countryRestrictionGroup.status) &&
        Objects.equals(this.startDate, countryRestrictionGroup.startDate) &&
        Objects.equals(this.createdDate, countryRestrictionGroup.createdDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, isWhitelist, countries, status, startDate, createdDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CountryRestrictionGroup {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    isWhitelist: ").append(toIndentedString(isWhitelist)).append("\n");
    sb.append("    countries: ").append(toIndentedString(countries)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

