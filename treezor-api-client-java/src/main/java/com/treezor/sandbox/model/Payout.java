/*
 * Treezor
 * Treezor API.  more info [here](https://www.treezor.com). 
 *
 * OpenAPI spec version: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.treezor.sandbox.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Payout
 */

public class Payout {
  @SerializedName("payoutId")
  private Integer payoutId = null;

  @SerializedName("payoutTag")
  private String payoutTag = null;

  /**
   * Gets or Sets payoutStatus
   */
  @JsonAdapter(PayoutStatusEnum.Adapter.class)
  public enum PayoutStatusEnum {
    PENDING("PENDING"),
    
    CANCELED("CANCELED"),
    
    VALIDATED("VALIDATED");

    private String value;

    PayoutStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PayoutStatusEnum fromValue(String text) {
      for (PayoutStatusEnum b : PayoutStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PayoutStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PayoutStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PayoutStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PayoutStatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("payoutStatus")
  private PayoutStatusEnum payoutStatus = null;

  @SerializedName("payoutTypeId")
  private Integer payoutTypeId = null;

  /**
   * Gets or Sets payoutType
   */
  @JsonAdapter(PayoutTypeEnum.Adapter.class)
  public enum PayoutTypeEnum {
    CREDIT_TRANSFER("Credit Transfer"),
    
    DIRECT_DEBIT("Direct Debit");

    private String value;

    PayoutTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PayoutTypeEnum fromValue(String text) {
      for (PayoutTypeEnum b : PayoutTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PayoutTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PayoutTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PayoutTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PayoutTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("payoutType")
  private PayoutTypeEnum payoutType = null;

  @SerializedName("walletId")
  private Integer walletId = null;

  @SerializedName("payoutDate")
  private String payoutDate = null;

  @SerializedName("walletEventName")
  private String walletEventName = null;

  @SerializedName("walletAlias")
  private String walletAlias = null;

  @SerializedName("userFirstname")
  private String userFirstname = null;

  @SerializedName("userLastname")
  private String userLastname = null;

  @SerializedName("userId")
  private Integer userId = null;

  @SerializedName("bankaccountId")
  private Integer bankaccountId = null;

  @SerializedName("beneficiaryId")
  private Integer beneficiaryId = null;

  @SerializedName("uniqueMandateReference")
  private String uniqueMandateReference = null;

  @SerializedName("bankaccountIBAN")
  private String bankaccountIBAN = null;

  @SerializedName("label")
  private String label = null;

  @SerializedName("amount")
  private String amount = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("partnerFee")
  private String partnerFee = null;

  @SerializedName("createdDate")
  private String createdDate = null;

  @SerializedName("modifiedDate")
  private String modifiedDate = null;

  @SerializedName("totalRows")
  private Integer totalRows = null;

  public Payout payoutId(Integer payoutId) {
    this.payoutId = payoutId;
    return this;
  }

   /**
   * Get payoutId
   * @return payoutId
  **/
  @ApiModelProperty(value = "")
  public Integer getPayoutId() {
    return payoutId;
  }

  public void setPayoutId(Integer payoutId) {
    this.payoutId = payoutId;
  }

  public Payout payoutTag(String payoutTag) {
    this.payoutTag = payoutTag;
    return this;
  }

   /**
   * Get payoutTag
   * @return payoutTag
  **/
  @ApiModelProperty(value = "")
  public String getPayoutTag() {
    return payoutTag;
  }

  public void setPayoutTag(String payoutTag) {
    this.payoutTag = payoutTag;
  }

  public Payout payoutStatus(PayoutStatusEnum payoutStatus) {
    this.payoutStatus = payoutStatus;
    return this;
  }

   /**
   * Get payoutStatus
   * @return payoutStatus
  **/
  @ApiModelProperty(value = "")
  public PayoutStatusEnum getPayoutStatus() {
    return payoutStatus;
  }

  public void setPayoutStatus(PayoutStatusEnum payoutStatus) {
    this.payoutStatus = payoutStatus;
  }

  public Payout payoutTypeId(Integer payoutTypeId) {
    this.payoutTypeId = payoutTypeId;
    return this;
  }

   /**
   * Get payoutTypeId
   * @return payoutTypeId
  **/
  @ApiModelProperty(value = "")
  public Integer getPayoutTypeId() {
    return payoutTypeId;
  }

  public void setPayoutTypeId(Integer payoutTypeId) {
    this.payoutTypeId = payoutTypeId;
  }

  public Payout payoutType(PayoutTypeEnum payoutType) {
    this.payoutType = payoutType;
    return this;
  }

   /**
   * Get payoutType
   * @return payoutType
  **/
  @ApiModelProperty(value = "")
  public PayoutTypeEnum getPayoutType() {
    return payoutType;
  }

  public void setPayoutType(PayoutTypeEnum payoutType) {
    this.payoutType = payoutType;
  }

  public Payout walletId(Integer walletId) {
    this.walletId = walletId;
    return this;
  }

   /**
   * Get walletId
   * @return walletId
  **/
  @ApiModelProperty(value = "")
  public Integer getWalletId() {
    return walletId;
  }

  public void setWalletId(Integer walletId) {
    this.walletId = walletId;
  }

  public Payout payoutDate(String payoutDate) {
    this.payoutDate = payoutDate;
    return this;
  }

   /**
   * Date YYYY-MM-DD
   * @return payoutDate
  **/
  @ApiModelProperty(value = "Date YYYY-MM-DD")
  public String getPayoutDate() {
    return payoutDate;
  }

  public void setPayoutDate(String payoutDate) {
    this.payoutDate = payoutDate;
  }

  public Payout walletEventName(String walletEventName) {
    this.walletEventName = walletEventName;
    return this;
  }

   /**
   * Get walletEventName
   * @return walletEventName
  **/
  @ApiModelProperty(value = "")
  public String getWalletEventName() {
    return walletEventName;
  }

  public void setWalletEventName(String walletEventName) {
    this.walletEventName = walletEventName;
  }

  public Payout walletAlias(String walletAlias) {
    this.walletAlias = walletAlias;
    return this;
  }

   /**
   * Get walletAlias
   * @return walletAlias
  **/
  @ApiModelProperty(value = "")
  public String getWalletAlias() {
    return walletAlias;
  }

  public void setWalletAlias(String walletAlias) {
    this.walletAlias = walletAlias;
  }

  public Payout userFirstname(String userFirstname) {
    this.userFirstname = userFirstname;
    return this;
  }

   /**
   * Get userFirstname
   * @return userFirstname
  **/
  @ApiModelProperty(value = "")
  public String getUserFirstname() {
    return userFirstname;
  }

  public void setUserFirstname(String userFirstname) {
    this.userFirstname = userFirstname;
  }

  public Payout userLastname(String userLastname) {
    this.userLastname = userLastname;
    return this;
  }

   /**
   * Get userLastname
   * @return userLastname
  **/
  @ApiModelProperty(value = "")
  public String getUserLastname() {
    return userLastname;
  }

  public void setUserLastname(String userLastname) {
    this.userLastname = userLastname;
  }

  public Payout userId(Integer userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @ApiModelProperty(value = "")
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(Integer userId) {
    this.userId = userId;
  }

  public Payout bankaccountId(Integer bankaccountId) {
    this.bankaccountId = bankaccountId;
    return this;
  }

   /**
   * Get bankaccountId
   * @return bankaccountId
  **/
  @ApiModelProperty(value = "")
  public Integer getBankaccountId() {
    return bankaccountId;
  }

  public void setBankaccountId(Integer bankaccountId) {
    this.bankaccountId = bankaccountId;
  }

  public Payout beneficiaryId(Integer beneficiaryId) {
    this.beneficiaryId = beneficiaryId;
    return this;
  }

   /**
   * Get beneficiaryId
   * @return beneficiaryId
  **/
  @ApiModelProperty(value = "")
  public Integer getBeneficiaryId() {
    return beneficiaryId;
  }

  public void setBeneficiaryId(Integer beneficiaryId) {
    this.beneficiaryId = beneficiaryId;
  }

  public Payout uniqueMandateReference(String uniqueMandateReference) {
    this.uniqueMandateReference = uniqueMandateReference;
    return this;
  }

   /**
   * Get uniqueMandateReference
   * @return uniqueMandateReference
  **/
  @ApiModelProperty(value = "")
  public String getUniqueMandateReference() {
    return uniqueMandateReference;
  }

  public void setUniqueMandateReference(String uniqueMandateReference) {
    this.uniqueMandateReference = uniqueMandateReference;
  }

  public Payout bankaccountIBAN(String bankaccountIBAN) {
    this.bankaccountIBAN = bankaccountIBAN;
    return this;
  }

   /**
   * Get bankaccountIBAN
   * @return bankaccountIBAN
  **/
  @ApiModelProperty(value = "")
  public String getBankaccountIBAN() {
    return bankaccountIBAN;
  }

  public void setBankaccountIBAN(String bankaccountIBAN) {
    this.bankaccountIBAN = bankaccountIBAN;
  }

  public Payout label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @ApiModelProperty(value = "")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public Payout amount(String amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(value = "")
  public String getAmount() {
    return amount;
  }

  public void setAmount(String amount) {
    this.amount = amount;
  }

  public Payout currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public Payout partnerFee(String partnerFee) {
    this.partnerFee = partnerFee;
    return this;
  }

   /**
   * Get partnerFee
   * @return partnerFee
  **/
  @ApiModelProperty(value = "")
  public String getPartnerFee() {
    return partnerFee;
  }

  public void setPartnerFee(String partnerFee) {
    this.partnerFee = partnerFee;
  }

  public Payout createdDate(String createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Date YYYY-MM-DD HH:MM:SS
   * @return createdDate
  **/
  @ApiModelProperty(value = "Date YYYY-MM-DD HH:MM:SS")
  public String getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(String createdDate) {
    this.createdDate = createdDate;
  }

  public Payout modifiedDate(String modifiedDate) {
    this.modifiedDate = modifiedDate;
    return this;
  }

   /**
   * Date YYYY-MM-DD HH:MM:SS
   * @return modifiedDate
  **/
  @ApiModelProperty(value = "Date YYYY-MM-DD HH:MM:SS")
  public String getModifiedDate() {
    return modifiedDate;
  }

  public void setModifiedDate(String modifiedDate) {
    this.modifiedDate = modifiedDate;
  }

  public Payout totalRows(Integer totalRows) {
    this.totalRows = totalRows;
    return this;
  }

   /**
   * Get totalRows
   * @return totalRows
  **/
  @ApiModelProperty(value = "")
  public Integer getTotalRows() {
    return totalRows;
  }

  public void setTotalRows(Integer totalRows) {
    this.totalRows = totalRows;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Payout payout = (Payout) o;
    return Objects.equals(this.payoutId, payout.payoutId) &&
        Objects.equals(this.payoutTag, payout.payoutTag) &&
        Objects.equals(this.payoutStatus, payout.payoutStatus) &&
        Objects.equals(this.payoutTypeId, payout.payoutTypeId) &&
        Objects.equals(this.payoutType, payout.payoutType) &&
        Objects.equals(this.walletId, payout.walletId) &&
        Objects.equals(this.payoutDate, payout.payoutDate) &&
        Objects.equals(this.walletEventName, payout.walletEventName) &&
        Objects.equals(this.walletAlias, payout.walletAlias) &&
        Objects.equals(this.userFirstname, payout.userFirstname) &&
        Objects.equals(this.userLastname, payout.userLastname) &&
        Objects.equals(this.userId, payout.userId) &&
        Objects.equals(this.bankaccountId, payout.bankaccountId) &&
        Objects.equals(this.beneficiaryId, payout.beneficiaryId) &&
        Objects.equals(this.uniqueMandateReference, payout.uniqueMandateReference) &&
        Objects.equals(this.bankaccountIBAN, payout.bankaccountIBAN) &&
        Objects.equals(this.label, payout.label) &&
        Objects.equals(this.amount, payout.amount) &&
        Objects.equals(this.currency, payout.currency) &&
        Objects.equals(this.partnerFee, payout.partnerFee) &&
        Objects.equals(this.createdDate, payout.createdDate) &&
        Objects.equals(this.modifiedDate, payout.modifiedDate) &&
        Objects.equals(this.totalRows, payout.totalRows);
  }

  @Override
  public int hashCode() {
    return Objects.hash(payoutId, payoutTag, payoutStatus, payoutTypeId, payoutType, walletId, payoutDate, walletEventName, walletAlias, userFirstname, userLastname, userId, bankaccountId, beneficiaryId, uniqueMandateReference, bankaccountIBAN, label, amount, currency, partnerFee, createdDate, modifiedDate, totalRows);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Payout {\n");
    
    sb.append("    payoutId: ").append(toIndentedString(payoutId)).append("\n");
    sb.append("    payoutTag: ").append(toIndentedString(payoutTag)).append("\n");
    sb.append("    payoutStatus: ").append(toIndentedString(payoutStatus)).append("\n");
    sb.append("    payoutTypeId: ").append(toIndentedString(payoutTypeId)).append("\n");
    sb.append("    payoutType: ").append(toIndentedString(payoutType)).append("\n");
    sb.append("    walletId: ").append(toIndentedString(walletId)).append("\n");
    sb.append("    payoutDate: ").append(toIndentedString(payoutDate)).append("\n");
    sb.append("    walletEventName: ").append(toIndentedString(walletEventName)).append("\n");
    sb.append("    walletAlias: ").append(toIndentedString(walletAlias)).append("\n");
    sb.append("    userFirstname: ").append(toIndentedString(userFirstname)).append("\n");
    sb.append("    userLastname: ").append(toIndentedString(userLastname)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    bankaccountId: ").append(toIndentedString(bankaccountId)).append("\n");
    sb.append("    beneficiaryId: ").append(toIndentedString(beneficiaryId)).append("\n");
    sb.append("    uniqueMandateReference: ").append(toIndentedString(uniqueMandateReference)).append("\n");
    sb.append("    bankaccountIBAN: ").append(toIndentedString(bankaccountIBAN)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    partnerFee: ").append(toIndentedString(partnerFee)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    totalRows: ").append(toIndentedString(totalRows)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

