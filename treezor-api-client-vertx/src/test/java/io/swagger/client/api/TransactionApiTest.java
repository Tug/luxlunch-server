/*
 * Treezor
 * Treezor API.  more info [here](https://www.treezor.com). 
 *
 * OpenAPI spec version: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import org.threeten.bp.OffsetDateTime;
import io.swagger.client.model.TreezorInlineResponse20022;
import io.swagger.client.model.TreezorInlineResponseDefault;

import io.swagger.client.Configuration;

import org.junit.Test;
import org.junit.Ignore;
import org.junit.BeforeClass;
import org.junit.Rule;
import org.junit.runner.RunWith;

import io.vertx.core.AsyncResult;
import io.vertx.core.Handler;
import io.vertx.core.json.JsonObject;
import io.vertx.core.Vertx;
import io.vertx.ext.unit.junit.VertxUnitRunner;
import io.vertx.ext.unit.junit.RunTestOnContext;
import io.vertx.ext.unit.TestContext;
import io.vertx.ext.unit.Async;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransactionApi
 */
@RunWith(VertxUnitRunner.class)
@Ignore
public class TransactionApiTest {

    private TransactionApi api;

    @Rule
    public RunTestOnContext rule = new RunTestOnContext();

    @BeforeClass
    public void setupApiClient() {
        JsonObject config = new JsonObject();
        Vertx vertx = rule.vertx();
        Configuration.setupDefaultApiClient(vertx, config);

        api = new TransactionApiImpl();
    }
    
    /**
     * get a transaction
     * Get a transaction from the system.
     *
     * @param context Vertx test context for doing assertions
     */
    @Test
    public void getTransactionTest(TestContext context) {
        Async async = context.async();
        Long id = null;
        api.getTransaction(id, result -> {
            // TODO: test validations
            async.complete();
        });
    }
    
    /**
     * search transactions
     * Get transactions that match search criteria.
     *
     * @param context Vertx test context for doing assertions
     */
    @Test
    public void getTransactionsTest(TestContext context) {
        Async async = context.async();
        String accessSignature = null;
        String accessTag = null;
        Integer accessUserId = null;
        String accessUserIp = null;
        Integer transactionId = null;
        String transactionType = null;
        Integer walletId = null;
        Integer userId = null;
        String name = null;
        String description = null;
        String amount = null;
        String currency = null;
        OffsetDateTime valueDate = null;
        OffsetDateTime executionDate = null;
        Integer pageNumber = null;
        Integer pageCount = null;
        String sortBy = null;
        String sortOrder = null;
        OffsetDateTime createdDateFrom = null;
        OffsetDateTime createdDateTo = null;
        api.getTransactions(accessSignature, accessTag, accessUserId, accessUserIp, transactionId, transactionType, walletId, userId, name, description, amount, currency, valueDate, executionDate, pageNumber, pageCount, sortBy, sortOrder, createdDateFrom, createdDateTo, result -> {
            // TODO: test validations
            async.complete();
        });
    }
    
}